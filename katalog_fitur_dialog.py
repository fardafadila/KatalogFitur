# -*- coding: utf-8 -*-
"""
/***************************************************************************
 katalog_fiturDialog
                                 A QGIS plugin
 Plugin untuk memudahkan pengkatalogan fitur spasial
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-05-31
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Teknik Geodesi UGM
        email                : farda.fadila@mail.ugm.ac.id
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
import os
import fnmatch
from pathlib import Path
import pystac
from .modules.get_files import get_files
from .modules.get_features import get_features
from .modules.make_cat import make_cat
from .modules.add_data import add_data


# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'katalog_fitur_dialog_base.ui'))


class katalog_fiturDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(katalog_fiturDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        opsi_cat = ["Katalog", "Subkatalog"]
        self.strukturCombo.addItems(opsi_cat)

        self.files = get_files()
        self.features = get_features(self.input_keyword)
        

        
        
        self.runSearch.clicked.connect(self.files.fungsi)

        ####Fungsi di create catalog
        self.make_cat = make_cat(self.strukturCombo, self.nama_katalog, self.deskripsi, self.folderpath_make, self.folder_make)
        self.folder_make.clicked.connect(self.make_cat.outFolder)
        self.run_make.clicked.connect(self.make_cat.saveCat)

        ###Fungsi di add data
        self.add = add_data(self.inputkatalog_add, self.folder_add, self.fileinput_add, self.file_add, self.add_date, self.fieldTable)
        self.folder_add.clicked.connect(self.add.getCat)
        self.file_add.clicked.connect(self.add.getAtt)
        self.runAdd.clicked.connect(self.add.getProp)





        self.helpButton.clicked.connect(self.features.files)

        #CREATE CATALOG

        #USE THE EXISTING CATALOG

    
    

    



